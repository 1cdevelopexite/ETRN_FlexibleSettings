<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать документ ЭТрН ГО</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">DR_Документы</Value>
		<Value xsi:type="xs:string">Если ЗначениеЗаполнено(Источник) Тогда 

	ПустойUTC = "+00:00";  

	ТЗ_УчастникиОбмена = DR_УчастникиОбмена.Выгрузить();

	//Основные реквизиты документа
	Приемник.ВидДокумента = ПолучитьЗначение_Перечисления("ВидыДокументов","ON_TRNACLGROT_Исходящий");
	Приемник.Дата = Источник.Дата; 
	
	//Дополнительные реквизиты документа	
	СписокРеквизитов = Новый Соответствие;
	СписокРеквизитов.Вставить("Документ1С", 				Источник.Ссылка);
	СписокРеквизитов.Вставить("Организация", 				Источник.Организация);
    СписокРеквизитов.Вставить("Грузоотправитель", 			Источник.Грузоотправитель);
	СписокРеквизитов.Вставить("Грузополучатель", 			Источник.Грузополучатель);
	СписокРеквизитов.Вставить("Грузоперевозчик", 			Источник.Перевозчик);
	СписокРеквизитов.Вставить("Заказчик", 					Источник.ЗаказчикПеревозки);
	СписокРеквизитов.Вставить("ТранспортнаяНакладнаяНомер", Источник.Номер);
	СписокРеквизитов.Вставить("ТранспортнаяНакладнаяДата",	Источник.Дата); //Формат(Источник.Дата,"ДФ=dd.MM.yyyy"));
	СписокРеквизитов.Вставить("ВидДокумента", 				Приемник.ВидДокумента);
	СписокРеквизитов.Вставить("РольУчастникаОбмена", 		"Грузоотправитель"); 	
	
	//Получаем GUID участников обмена 
	xmlОрганизация 		= DR_GLN_Прочитать(Источник.Организация, "Грузоотправитель");
    xmlГрузоотправитель = DR_GLN_Прочитать(Источник.Грузоотправитель, "Грузоотправитель");
	xmlГрузополучатель 	= DR_GLN_Прочитать(Источник.Грузополучатель, "Грузополучатель");
	xmlГрузоперевозчик 	= DR_GLN_Прочитать(Источник.Перевозчик, "Грузоперевозчик");
	xmlЗаказчик 		= DR_GLN_Прочитать(Источник.ЗаказчикПеревозки, "Грузополучатель");
	
	СписокРеквизитов.Вставить("xmlОрганизация", 			?(xmlОрганизация.СведенияЕсть, xmlОрганизация.GUID, ""));
    СписокРеквизитов.Вставить("xmlГрузоотправитель", 		?(xmlГрузоотправитель.СведенияЕсть, xmlГрузоотправитель.GUID, ""));
	СписокРеквизитов.Вставить("xmlГрузополучатель", 		?(xmlГрузополучатель.СведенияЕсть, xmlГрузополучатель.GUID, ""));
	СписокРеквизитов.Вставить("xmlГрузоперевозчик", 		?(xmlГрузоперевозчик.СведенияЕсть, xmlГрузоперевозчик.GUID, ""));
	СписокРеквизитов.Вставить("xmlЗаказчик", 				?(xmlЗаказчик.СведенияЕсть, xmlЗаказчик.GUID, ""));
	
	//Транспортная информация
	СписокРеквизитов.Вставить("ТСРегНомер", 				Источник.АвтомобильГосударственныйНомер);
	СписокРеквизитов.Вставить("ПарТСМарка", 				Источник.АвтомобильМарка);
	СписокРеквизитов.Вставить("ПарТСТип", 					Источник.АвтомобильТип);
	СписокРеквизитов.Вставить("ТСТипВлад", 					"1");	
	СписокРеквизитов.Вставить("ПарТСГрузопод", 				Строка(Источник.АвтомобильГрузоподъемностьВТоннах));
	СписокРеквизитов.Вставить("ПарТСВместим", 				Строка(Источник.АвтомобильВместимостьВКубическихМетрах));	
	
	СписокРеквизитов.Вставить("ПрицепРегНомер", 			Источник.ГосударственныйНомерПрицепа);
	СписокРеквизитов.Вставить("ПарПрицепМарка", 			Источник.Прицеп);
	СписокРеквизитов.Вставить("ПарПрицепТип", 				"прицеп");
	СписокРеквизитов.Вставить("ПрицепТипВлад", 				"1");    
	СписокРеквизитов.Вставить("ПарПрицепГрузопод", 			"50"); 
	СписокРеквизитов.Вставить("ПарПрицепВместим", 			"20");                   
                     
	ФИОВодителя = DR_ОбщегоНазначения.DR_СтрРазделить(Источник.Водитель, " ");                     
	СписокРеквизитов.Вставить("ВодитФамилия", 				ФИОВодителя[0]); 
	СписокРеквизитов.Вставить("ВодитИмя", 					ФИОВодителя[1]);
	СписокРеквизитов.Вставить("ВодитОтчество", 				ФИОВодителя[2]);
	ТлфВодителя = ПолучитьКонтактнуюИнформациюПоТипу(Источник.Перевозчик, Перечисления.ТипыКонтактнойИнформации.Телефон);
	СписокРеквизитов.Вставить("ВодитТлф", 					ТлфВодителя[0]);//ПолучитьКонтактнуюИнформациюПоТипу(Источник.Перевозчик, Перечисления.ТипыКонтактнойИнформации.Телефон, Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента));
	СписокРеквизитов.Вставить("СерВУ", 						Источник.УдостоверениеСерия);
	СписокРеквизитов.Вставить("НомВУ", 						Источник.УдостоверениеНомер);
	СписокРеквизитов.Вставить("ДатаВыдВУ", 					Источник.Дата); //Формат(Источник.Дата,"ДФ=dd.MM.yyyy"));  	
	
	//Данные груза
	СписокРеквизитов.Вставить("МасБрутОтгр", 				Источник.МассаБрутто);
	СписокРеквизитов.Вставить("МетОпрМасс", 				"01");
	СписокРеквизитов.Вставить("КолМестПрием", 				"50");
	
	//Особые условия перевозки
	СписокРеквизитов.Вставить("УкНормПрвз", 				"Указания для выполнения норм перевозки (для выполнения фитосанитарных, санитарных, карантинных, таможенных и пр. требований) отсутствуют");
	СписокРеквизитов.Вставить("ОгрСкор", 					"Указания об ограничениях скорости движения. Согласно ПДД");
	
	//Переадресовка
	СписокРеквизитов.Вставить("ЛицоПА", 					"Грузоотправитель");
	СписокРеквизитов.Вставить("СпосПерУкПА", 				"Электронное уведомление перевозчика о переадресовке");
		                       
	СписокРеквизитов.Вставить("МршТекст", 					"Москау-Уаронеж");   
	
	//Заполнение обязательных дат
	СписокРеквизитов.Вставить("ДатВрДостГр", 				НачалоДня(ТекущаяДата())+3600*8);
	СписокРеквизитов.Вставить("ЗаявПогр", 					НачалоДня(ТекущаяДата())+3600*9);
	СписокРеквизитов.Вставить("ЗаявДатВрПриб", 				НачалоДня(ТекущаяДата())+3600*12);
	СписокРеквизитов.Вставить("ФДатВрПриб", 				НачалоДня(ТекущаяДата())+3600*13);	
	СписокРеквизитов.Вставить("ФДатВрУбыт", 				НачалоДня(ТекущаяДата())+3600*14);  
	
	СписокРеквизитов.Вставить("УИдТрН", 				    ""); 	                       
	
	Для Каждого Запись из СписокРеквизитов Цикл
		НоваяЗапись = Приемник.ДополнительныеРеквизиты.Добавить();
		
		НоваяЗапись.Реквизит = Запись.Ключ;
		НоваяЗапись.Значение = Запись.Значение;
	КонецЦикла;
	
	ТЗГруз = Новый ТаблицаЗначений;
	ТЗГруз.Колонки.Добавить("Номенклатура");
	ТЗГруз.Колонки.Добавить("НаимГруз");
	ТЗГруз.Колонки.Добавить("СостГруз");
	ТЗГруз.Колонки.Добавить("СпУпак");
	ТЗГруз.Колонки.Добавить("ВидТар");
	ТЗГруз.Колонки.Добавить("КолМестГр");
	ТЗГруз.Колонки.Добавить("Маркировка");
	ТЗГруз.Колонки.Добавить("МасНетЗнач");
	ТЗГруз.Колонки.Добавить("МасБрутЗнач");
	ТЗГруз.Колонки.Добавить("СтЦеннГр");
	ТЗГруз.Колонки.Добавить("КодОКВ");
	ТЗГруз.Колонки.Добавить("НаимОКВ");
	ТЗГруз.Колонки.Добавить("ВидДокумента");

	
	СтруктураДанных = Новый Структура;
	
	//Табличные части
	ДокументыОснования = Источник.ДокументыОснования.Выгрузить();
	Для Каждого Строка Из ДокументыОснования Цикл
		ТЧТовары = Строка.ДокументОснование.Товары.Выгрузить();
		
		Для Каждого СтрокаТовар Из ТЧТовары Цикл
			НоваяСтрока = ТЗГруз.Добавить();
			
			НоваяСтрока.НаимГруз 		= СтрокаТовар.Номенклатура.Наименование;
			НоваяСтрока.СостГруз 		= "Удовлетворительное";
			НоваяСтрока.СпУпак 			= "Транспортная";
			НоваяСтрока.ВидТар		 	= "00";
			НоваяСтрока.КолМестГр 		= 1; 
			НоваяСтрока.Маркировка 		= "Отсутствует";
			НоваяСтрока.МасНетЗнач 		= "10"; 
			НоваяСтрока.МасБрутЗнач 	= "12";
			НоваяСтрока.СтЦеннГр 		= СтрокаТовар.Сумма;
			НоваяСтрока.КодОКВ 			= "643";
			НоваяСтрока.НаимОКВ 		= "RUB";		
			НоваяСтрока.ВидДокумента 	= Приемник.ВидДокумента;		
		КонецЦикла;
	КонецЦикла;
	
	ЗаписатьТаблицуЗначенийВСтруктуру(ТЗГруз, "СведенияОГрузе", СтруктураДанных);
    
    GUIDФайла = Новый УникальныйИдентификатор;
	ИдентификаторФайла        = "ON_TRNACLGROT" + "_" + ?(xmlГрузоперевозчик.СведенияЕсть, xmlГрузоперевозчик.GUID, "") + "_" + ?(xmlГрузополучатель.СведенияЕсть, xmlГрузополучатель.GUID, "") + "_" + ?(xmlГрузоотправитель.СведенияЕсть, xmlГрузоотправитель.GUID, "") + "_0_" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd") + "_" + GUIDФайла;
	Приемник.ИдентификаторДокумента = ИдентификаторФайла;
	
	//ДобавитьЗначениеХЗВРеквизитОбъекта(Приемник, СтруктураДанных, "ДанныеДокумента", МассивЛогаСобытий);
    НоваяЗапись = Приемник.ДополнительныеРеквизиты.Добавить();
		
	НоваяЗапись.Реквизит = "Таблицы";
	НоваяЗапись.ХранилищеЗначения = Новый ХранилищеЗначения(СтруктураДанных);

Иначе
	Приемник.Дата = ТекущаяДата();
КонецЕсли; 
          
Приемник.ПередЗаписьюПроверка();          
          
Приемник.Записать();</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Накладная</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">4</lastId>
			<item>
				<value xsi:type="xs:string">ДополнительныйПолучатель</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Грузоперевозчик</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Грузополучатель</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Грузоотправитель</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Создать документ ЭТрН ГО</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
	</row>
</ValueTree>